//PROBLEM1
ALGORITHM sum
VAR
   tab1,tab2 : ARRAY_OF INTEGER[5];
   i:INTEGER:=0
   found:BOOLEAN;
BEGIN
    FOR i FROM 0 TO 5 STEP 1  DO
    found=false
        Read(tab1[i])
        Read(tab2[i])
        FOR J FROM 0 TO 5 STEP 1 DO
        IF (Tab1[i]==Tab2[j]) THEN
            found=true
        END_IF
        IF (found=false) THEN
         s=s+tab[i]
        END_IF   
    END_FOR
END

//PROBLEM2
ALGORITHM vector
VAR
    i:INTEGER;
    ps:INTEGER;
    v1,v2:INTEGER;
BEGIN
     dot_product(v1, v2):INTEGER
    ps = 0
    for i = 1 to length(v1) do
        ps = ps + v1[i] * v2[i]
    end for
    return ps


orthogonal_pairs(n, vector_pairs):
    for i = 1 to n do
        v1 = vector_pairs[i][1]
        v2 = vector_pairs[i][2]
        dot_prod = dot_product(v1, v2)
        if dot_prod == 0 then
            print("Vectors", v1, "and", v2, "are orthogonal")
        else
            print("Vectors", v1, "and", v2, "are not orthogonal")
        end if
    end for
END
